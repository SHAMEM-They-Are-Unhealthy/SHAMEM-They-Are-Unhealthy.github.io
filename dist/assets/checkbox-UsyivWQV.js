class a extends HTMLElement{static get observedAttributes(){return["number","vid","other-id","min","max","value","prefix","suffix","no-input"]}constructor(){super()}connectedCallback(){this.getAttribute("number")!=""?this.innerHTML=`
            <div class="rangeDiv">
                <input type="range" class="range" no-input="${this.getAttribute("no-input")}" other-id="${this.getAttribute("vid")}-text" min="${this.getAttribute("min")}" max="${this.getAttribute("max")}" value="${this.getAttribute("value")}" id="${this.getAttribute("vid")}" prefix="${this.getAttribute("prefix")}" suffix="${this.getAttribute("suffix")}" style="background: linear-gradient(to right, #f50 ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%, #ccc ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%)" />
                <label id="${this.getAttribute("vid")}-text" style="padding-left: 20px; padding-right: 20px;">${this.getAttribute("prefix")+this.getAttribute("value")+this.getAttribute("suffix")}</label> 
            </div>
            `:this.getAttribute("other-id")!=""?this.innerHTML=`
                <div class="rangeDiv">
                    <input type="range" class="range" no-input="${this.getAttribute("no-input")}" other-id="${this.getAttribute("other-id")}" min="${this.getAttribute("min")}" max="${this.getAttribute("max")}" value="${this.getAttribute("value")}" id="${this.getAttribute("vid")}" prefix="${this.getAttribute("prefix")}" suffix="${this.getAttribute("suffix")}" style="background: linear-gradient(to right, #f50 ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%, #ccc ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%)" /> 
                </div>
                `:this.innerHTML=`
                <div class="rangeDiv">
                    <input type="range" class="range" no-input="${this.getAttribute("no-input")}" other-id="" min="${this.getAttribute("min")}" max="${this.getAttribute("max")}" value="${this.getAttribute("value")}" id="${this.getAttribute("vid")}" prefix="${this.getAttribute("prefix")}" suffix="${this.getAttribute("suffix")}" style="background: linear-gradient(to right, #f50 ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%, #ccc ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%)" /> 
                </div>
                `}}customElements.define("range-bar",a);document.addEventListener("DOMContentLoaded",function(){const i=document.getElementsByClassName("rangeDiv");for(let e=0;e<i.length;e++){const t=i[e].children[0],r=t.getAttribute("other-id")!="";if(t.getAttribute("no-input")=="y")return;t.addEventListener("input",s=>{const u=Number(s.target.value);r&&(document.querySelector("#"+t.getAttribute("other-id")).textContent=t.getAttribute("prefix")+u+t.getAttribute("suffix"));const g=(u-t.min)/(t.max-t.min)*100;t.style.background=`linear-gradient(to right, #f50 ${g}%, #ccc ${g}%)`,t.style.setProperty("--thumb-rotate",`${u/100*2160}deg`)})}});function n(i){n.list||(n.list=[]);for(var e=n.list,t=0;t<i.length;t++){var r=new Image;r.onload=function(){var s=e.indexOf(this);s!==-1&&e.splice(s,1)},e.push(r),r.src=i[t]}}export{n as p};
