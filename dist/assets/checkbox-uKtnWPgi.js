class g extends HTMLElement{static get observedAttributes(){return["number","vid","other-id","min","max","value","prefix","suffix","no-input"]}constructor(){super()}connectedCallback(){this.getAttribute("number")!=""?this.innerHTML=`
            <div class="rangeDiv">
                <input type="range" class="range" no-input="${this.getAttribute("no-input")}" other-id="${this.getAttribute("vid")}-text" min="${this.getAttribute("min")}" max="${this.getAttribute("max")}" value="${this.getAttribute("value")}" id="${this.getAttribute("vid")}" prefix="${this.getAttribute("prefix")}" suffix="${this.getAttribute("suffix")}" style="background: linear-gradient(to right, #f50 ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%, #ccc ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%)" />
                <label id="${this.getAttribute("vid")}-text" style="padding-left: 20px; padding-right: 20px;">${this.getAttribute("prefix")+this.getAttribute("value")+this.getAttribute("suffix")}</label> 
            </div>
            `:this.getAttribute("other-id")!=""?this.innerHTML=`
                <div class="rangeDiv">
                    <input type="range" class="range" no-input="${this.getAttribute("no-input")}" other-id="${this.getAttribute("other-id")}" min="${this.getAttribute("min")}" max="${this.getAttribute("max")}" value="${this.getAttribute("value")}" id="${this.getAttribute("vid")}" prefix="${this.getAttribute("prefix")}" suffix="${this.getAttribute("suffix")}" style="background: linear-gradient(to right, #f50 ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%, #ccc ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%)" /> 
                </div>
                `:this.innerHTML=`
                <div class="rangeDiv">
                    <input type="range" class="range" no-input="${this.getAttribute("no-input")}" other-id="" min="${this.getAttribute("min")}" max="${this.getAttribute("max")}" value="${this.getAttribute("value")}" id="${this.getAttribute("vid")}" prefix="${this.getAttribute("prefix")}" suffix="${this.getAttribute("suffix")}" style="background: linear-gradient(to right, #f50 ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%, #ccc ${(this.getAttribute("value")-this.getAttribute("min"))/(this.getAttribute("max")-this.getAttribute("min"))*100}%)" /> 
                </div>
                `}}customElements.define("range-bar",g);document.addEventListener("DOMContentLoaded",function(){const e=document.getElementsByClassName("rangeDiv");for(let i=0;i<e.length;i++){const t=e[i].children[0],s=t.getAttribute("other-id")!="";if(t.getAttribute("no-input")=="y")return;t.addEventListener("input",n=>{const r=Number(n.target.value);s&&(document.querySelector("#"+t.getAttribute("other-id")).textContent=t.getAttribute("prefix")+r+t.getAttribute("suffix"));const u=(r-t.min)/(t.max-t.min)*100;t.style.background=`linear-gradient(to right, #f50 ${u}%, #ccc ${u}%)`,t.style.setProperty("--thumb-rotate",`${r/100*2160}deg`)})}});
